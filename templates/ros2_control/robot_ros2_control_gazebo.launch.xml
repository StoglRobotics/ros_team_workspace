<!--
Copyright (c) 2024, Stogl Robotics Consulting UG (haftungsbeschrÃ¤nkt)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Source of this file are templates in [RosTeamWorkspace](https://github.com/StoglRobotics/ros_team_workspace) repository.

Author: Dr. Denis
-->

<launch>
  <arg name="runtime_config_package"
       default="$RUNTIME_CONFIG_PKG_NAME$"
       description="Package with the controller's configuration in 'config' folder. Usually the argument is not set, it enables use of a custom setup."/>
  <arg name="controllers_file"
       default="$ROBOT_NAME$_controllers"
       description="YAML file with the controllers configuration."/>
  <arg name="prefix"
       default=""
       description="Prefix of the joint names, useful for multi-robot setup. If changed than also joint names in the controllers' configuration have to be updated."/>
  <arg name="simulation_controllers"
       default="$(find-pkg-share $(var runtime_config_package))/config/$(var controllers_file).yaml"
       description="Path to the yaml file with controllers used in the simulation."/>
  <arg name="description_package"
       default="$DESCR_PKG_NAME$"
       description="Description package with robot URDF/xacro files. Usually the argument is not set, it enables use of a custom description."/>
  <arg name="prefix"
       default=""
       description="Prefix of the joint names, useful for multi-robot setup. If changed than also joint names in the controllers' configuration have to be updated."/>
  <arg name="robot_controller"
       default="diffbot_base_controller"
       description="Robot controller to start. Choices are: [diffbot_base_controller]."/>

  <include file="$(find-pkg-share $(var description_package))/launch/$ROBOT_NAME$_description.launch.xml" >
       <arg name="prefix" value="$(var prefix)" />
       <arg name="sim_gazebo" value="true" />
       <arg name="simulation_controllers" value="$(var simulation_controllers)" />
       <arg name="launch_rviz" value="false" />
  </include>

  <node pkg="rviz2" exec="rviz2" output="log" args="-d $(find-pkg-share $(var description_package))/rviz/$ROBOT_NAME$.rviz" >
      <param name="use_sim_time" value="true" />
  </node>

  <!--joint_state_braodcaster_spawner-->
  <node pkg="controller_manager" exec="spawner" args="joint_state_broadcaster">
      <param name="use_sim_time" value="true" />
  </node>

  <!--robot_controller_spawner-->
  <node pkg="controller_manager" exec="spawner" args="$(var robot_controller)">
      <param name="use_sim_time" value="true" />
  </node>

  <!-- Start Gazebo -->
  <let name="gazebo_world" value="$(find-pkg-share $(var runtime_config_package))/environments/empty.sdf" />
  <include file="$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py" >
      <arg name="gz_args" value=" -r -v 4 $(var gazebo_world)"/>
  </include>

  <node pkg="ros_gz_bridge" exec="parameter_bridge" args="/clock@rosgraph_msgs/msg/Clock[ignition.msgs.Clock" output="screen"/>

  <!-- Create robot in Gazebo -->
  <node pkg="ros_gz_sim" exec="create" output="screen" args="-topic /robot_description"/>

</launch>
