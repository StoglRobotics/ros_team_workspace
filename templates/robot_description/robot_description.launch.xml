<!--
Copyright (c) 2024, Stogl Robotics Consulting UG (haftungsbeschrÃ¤nkt)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Source of this file are templates in https://github.com/StoglRobotics/ros_team_workspace repository.
-->

<launch>
  <arg name="description_package"
       default="$PKG_NAME$"
       description="Description package of the dte_ea_1000. Usually the argument is not set, it enables use of a custom description."/>
  <arg name="prefix"
       default=""
       description="Prefix of the joint names, useful for multi-robot setup. If changed than also joint names in the controllers' configuration have to be updated."/>
  <arg name="use_mock_hardware"
       default="false"
       description="Start robot with mock hardware mirroring command to its states."/>
  <arg name="mock_sensor_commands"
       default="false"
       description="Enable mock command interfaces for sensors used for simple simulations. Used only if 'use_mock_hardware' parameter is true."/>
  <arg name="sim_gazebo"
       default="false"
       description="Start robot in Gazebo simulation."/>
  <arg name="simulation_controllers"
       default=""
       description="Path to the yaml file with controllers used in the simulation."/>
  <arg name="launch_rviz"
       default="false"
       description="Launch RViz?"/>

  <let name="robot_description_content" value="$(command '$(find-exec xacro) $(find-pkg-share $(var description_package))/urdf/$ROBOT_NAME$.urdf.xacro prefix:=$(var prefix) use_mock_hardware:=$(var use_mock_hardware) mock_sensor_commands:=$(var mock_sensor_commands) sim_gazebo:=$(var sim_gazebo) simulation_controllers:=$(var simulation_controllers)')" />

  <node pkg="robot_state_publisher" exec="robot_state_publisher" output="both">
    <param name="robot_description" value="$(var robot_description_content)" />
    <param name="use_sim_time" value="$(var sim_gazebo)" />
  </node>

  <node if="$(var launch_rviz)" pkg="rviz2" exec="rviz2" output="log" args="-d $(find-pkg-share $(var description_package))/rviz/$ROBOT_NAME$.rviz">
    <param name="use_sim_time" value="$(var sim_gazebo)" />
  </node>
</launch>
